name: Create and/or Update Infrastructure
on:
  # push:
  #   branches:
  #     - main
  #     - integration

  workflow_dispatch:
    # inputs:
    #   branch_name:
    #     description: 'Branch name to determine environment'
    #     required: false
    #     default: 'main'

jobs:
  # Job that will dynamically set github actions environment based on the branches.
  extract-environment-name:
    name: Extract environment name
    # Define environment variables for this job.
    env:
      ENV_NAME: ""
      TFVARS_FILE: ""
      TF_ALWAYS_TEST: false
      TF_ALWAYS_PROD: false
    runs-on: ubuntu-latest
    steps:
      # Set environment and read secret values.
      - name: Set env vars
        run: |
          if [[ "${TF_ALWAYS_PROD}" == true ]] || [[ "${GITHUB_REF_NAME}" == "main" ]]
          then
            echo "ENV_NAME=prod" >> $GITHUB_ENV
            echo "TFVARS_FILE=_prod.tfvars" >> $GITHUB_ENV
            echo "env=prod"
          elif [[ "${GITHUB_REF_NAME}" == "integration" ]]
          then
            echo "ENV_NAME=test" >> $GITHUB_ENV
            echo "TFVARS_FILE=_test.tfvars" >> $GITHUB_ENV
            echo "env=test"
          else
            echo "ENV_NAME=dev" >> $GITHUB_ENV
            echo "TFVARS_FILE=_dev.tfvars" >> $GITHUB_ENV
            echo "env=dev"
          fi
    # Set outputs from environment variables set in steps.
    outputs:
      environment: ${{ env.ENV_NAME }}
      tfvars: ${{ env.TFVARS_FILE }}


  deploy:
    permissions:
      security-events: write
      actions: read
      contents: read
      id-token: write

    name: Deployment
    needs:
      - extract-environment-name
    # Read environment from previous job.
    environment: ${{ needs.extract-environment-name.outputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ vars.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.POOL_NAME }}/providers/${{ vars.PROVIDER_NAME }}"
          service_account: "github-actions-sa@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.PROJECT_ID }}

      - name: Set Terraform Environment Variables
        run: |
          echo "TF_VAR_project_id=${{ vars.PROJECT_ID }}" >> $GITHUB_ENV
                 
      - name: Terraform Init
        working-directory: ./terraform
        shell: sh
        run: |
          terraform init \
          -backend-config="bucket=${{ vars.BUCKET_NAME }}" \
          -backend-config="prefix=infrastructure/state"

      - name: Terraform Validate
        working-directory: ./terraform
        shell: sh
        run: |
          terraform validate

      - name: Terraform Format Check
        working-directory: ./terraform
        shell: sh
        run: |
          terraform fmt -check
      
      - name: Terraform Plan
        working-directory: ./terraform
        shell: sh
        run: |
          terraform plan -var-file=${{ needs.extract-environment-name.outputs.tfvars }} -var 'project_id=${{ vars.PROJECT_ID }}' -out=plan.tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        shell: sh
        run: |
          terraform apply "plan.tfplan"